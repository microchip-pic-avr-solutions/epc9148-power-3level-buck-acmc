digraph power_control_flowchart
{ 
    compound=true;
    newrank=true;
    center=true;
    splines=ortho;
    node [fontname = "Consolas, 'Courier New', Courier, Sans-Serif"];
    node [fontsize = 10];
    node [shape = box]; call_PWR_SM; Init; Run;
    node [shape = box]; FB_data; fault_test; exec_State_Machine; current_cal; current_bal; reg_test; exit; PWR_suspend; PWR_resume;
    node [shape = box]; enabled; State_machine; exit1; Buck_suspend; Buck_resume; 
    node [shape = box]; NPNZ_control; Suspend_PWM; Resume_PWM; PWM; ADC; cNPNZ;
    node [shape = record]; Success; Fault_detected;
    node [shape = diamond]; Reset;  
       
    Reset [label="Reset"];
    Success [label="{Main Function |{<f0> NO|<f1> Successful?|<f2> YES}}"];
       
    subgraph cluster_loop {
        label="main() loop";
        call_PWR_SM [label="Call PWR State Machine" URL="@ref appPowerSupply_Execute"];
        Fault_detected [label="{Call Fault Handler |{<f0> NO|<f1> Fault Detected?|<f2> YES}}" URL="@ref appFaultMonitor_Execute"]; 
    }
  
    subgraph cluster0 {

        subgraph cluster00{
            label="Power Supply State Machine";
            FB_data [label="Publish FeedBack Data" URL="@ref appPowerSupply_Execute"]; 
            fault_test [label="Fault Test"]; 
            exec_State_Machine [label="Execute State Machine" URL="@ref drv_BuckConverter_Execute"]; 
            Init [label="Init"];
            Run [label="Run"]
            current_cal [label="Current Calibration" URL="@ref appPowerSupply_CurrentSenseCalibration"]; 
            current_bal[label="Current Balancing" URL="@ref appPowerSupply_CurrentBalancing"];
            reg_test [label="Regulation Test ON/OFF"]; 
            exit[label="Exit"]; 
        }

        PWR_suspend [label="PWR Suspend"]; 
        PWR_resume [label="PWM Resume"];
        label="Application Layer";
    }

    subgraph cluster1 {
        subgraph cluster10 {
            label="Buck Converter State Machine";
            enabled [label="Enabled?"]; 
            State_machine [label="State Machine" URL="@ref buck_state_machine"]; 
            exit1 [label="Exit"]; 
        }
        subgraph cluster11 {
            label="Buck Controller Control";
            Buck_suspend [label="Buck Suspend"]; 
            Buck_resume [label="Buck Resume"];
        }    
        label="Device Layer";
    }

    subgraph cluster2 {
        NPNZ_control [label="Independent NPNZ Real Time \nControl Driver/Library \n \nCycle-by-cycle PWM interrupt" URL="@ref npnz16b.h"];
        subgraph cluster20{
            Suspend_PWM [label="Suspend PWM"]; 
            Resume_PWM [label="Resume PWM"]; 
        }
        label="my Driver Layer";
    }
  
    PWM [label="PWM"];
    ADC [label="ADC"];
    cNPNZ [label="cNPNZ16b_t"];
  
    Reset -> Success;
    "Success":f0 -> Reset;
    "Success":f2 -> call_PWR_SM [ltail=yes1 lhead=cluster_loop];
    call_PWR_SM -> Fault_detected;
    "Fault_detected":f2 -> PWR_suspend -> Buck_suspend -> Suspend_PWM;
    "Fault_detected":f0 -> call_PWR_SM [ltail=no2 lhead=cluster_loop];
  
    call_PWR_SM -> FB_data [ltail=call_PWR_SM lhead=cluster0];
    FB_data -> fault_test -> exec_State_Machine -> Init -> current_cal -> exit;
    exec_State_Machine -> Run -> current_bal -> reg_test -> exit;
    exec_State_Machine -> State_machine [ltail=exec_State_Machine lhead=cluster10];
    exit -> call_PWR_SM;
    Buck_suspend -> State_machine;
    Buck_resume -> State_machine;
    "Fault_detected":f0 -> PWR_resume;
    PWR_resume -> enabled [ltail=PWR_resume lhead=cluster10];
    Buck_resume -> Resume_PWM;
    enabled -> State_machine -> exit1;
       
    PWM -> NPNZ_control;
    ADC -> NPNZ_control;
    cNPNZ -> NPNZ_control;
        
    Reset ->call_PWR_SM [style=invis];
    exit -> PWR_suspend -> PWR_resume [style=invis];    
    call_PWR_SM -> FB_data ->enabled [style=invis];
    exit -> exit1 [style=invis];
    call_PWR_SM -> fault_test -> State_machine -> NPNZ_control [style=invis];
    cNPNZ -> ADC -> PWM [style=invis];      
 
    {rank=same; Reset; call_PWR_SM}
    {rank=same; FB_data; enabled; NPNZ_control; cNPNZ;}
    {rank=same; fault_test;ADC;}
    {rank=same; exec_State_Machine; State_machine;PWM;}
    {rank=same; Fault_detected; exit;exit1;}
    {rank=same;PWR_suspend;Buck_suspend; Suspend_PWM;}
    {rank=sink; PWR_resume; Buck_resume; Resume_PWM;} 
 
}
  
 

